# vi:ft=i3config
# Read `man 5 sway` for a complete reference.
include /etc/sway/config.d/*
# exec redshift-custom
# cursor theme
seat seat0 xcursor_theme Adwaita 24
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty

set $gnome-schema org.gnome.desktop.interface
exec_always {
	gsettings set $gnome-schema gtk-theme 'Breeze-Dark'
	gsettings set $gnome-schema icon-theme 'Breeze-Dark'
	gsettings set $gnome-schema cursor-theme 'Adwaita'
}

# launchers
bindsym $mod+z exec dmenu-runner
bindsym $mod+d exec app-launcher
bindsym Mod1+Tab exec window-switcher
for_window [app_id="^firefox$" title="^About Firefox Nightly$"] floating enable
for_window [app_id="^firefox$" title="^Extension: \(Font Finder\) - Inspector :: Font Finder - Firefox Nightly$"] floating enable
for_window [app_id="^firefox$" title=".*Greasemonkey User Script - Firefox Nightly$"] floating enable
for_window [app_id="^launcher$"] floating enable
# havoc is a terminal emulator that starts up quickly; I use it for floating menus
for_window [title="^havoc$"] floating enable
for_window [title="^havoc$"] border pixel 3
for_window [title="^cava$"] border pixel 1

for_window [app_id="^org\.keepassxc\.KeePassXC$"] floating enable
for_window [app_id="^pavucontrol-qt$"] floating enable
for_window [class="^Sxiv$"] floating enable
for_window [app_id="^pinentry-qt$"] floating enable
for_window [app_id="^Minetest$"] floating enable
for_window [app_id="^supertux2"] floating enable
# images and videos should float above other programs since their dimensions should
# not be limited by the WM.
for_window [app_id="^imv$"] floating enable
for_window [app_id="^mpv$"] floating enable

# muh latency
for_window [app_id="^alacritty$"] max_render_time 1
for_window [class="^st-256color$"] max_render_time 1
for_window [class="^st-256color$"] opacity 0.92
# disable titlebar
default_border pixel 3

### Autostart
# exec ~/startup.sh
# notifications
# exec mako # handled by systemd now
# overlay bar
exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | wob
# daemons to download whatever gets sent to a named pipe
exec mkfifo /tmp/dldaemon && tail -f /tmp/dldaemon | xargs -L1 -P 0 aria2c -d "$XDG_DATA_HOME/dldaemon"
exec mkfifo /tmp/ytdldaemon && tail -f /tmp/ytdldaemon | xargs -L1 -P 0 youtube-dl -o "$HOME/Videos/yt/ytdldaemon/%(title)s-%(id)s.%(ext)s"
# idle config
exec swayidle -w \
	timeout 180 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
	before-sleep 'loginctl lock-session' \
	lock 'swaylock-fancy'

#colors
# class                 border  backgr. text    indicator child_border
client.focused          #3daee6 #2980b9 #ffffff #3daee9   #2980b9
client.focused_inactive #3b4045 #31363b #ffffff #4d4d4d   #31363b
client.unfocused        #3b4045 #232629 #888888 #292d2e   #232629
# client.urgent           #27ae60 #900000 #ffffff #900000   #900000
# client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output '*' bg ~/Pictures/animewalls/cropped3.png fill
#
# Example configuration:
#
#	output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Input configuration
#
# Example configuration:
#
#	input "2:14:SynPS/2_Synaptics_TouchPad" {
#		dwt enabled
#		tap enabled
#		natural_scroll enabled
#		middle_emulation enabled
#	}
input * {
	xkb_options caps:escape
}

#
# Other configs
#

#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
	# start a terminal
	bindsym $mod+space exec $term
	bindsym $mod+Mod1+space exec floating-terminal

	# kill focused window
	bindsym $mod+Shift+q kill

	# start your launcher
	# bindsym $mod+d exec $menu

	# Drag floating windows by holding down $mod and left mouse button.
	# Resize them with right mouse button + $mod.
	# Despite the name, also works for non-floating windows.
	# Change normal to inverse to use left mouse button for resizing and right
	# mouse button for dragging.
	floating_modifier $mod normal

	# sloppy focus
	focus_follows_mouse yes

	# reload the configuration file
	bindsym $mod+Shift+c reload

	# exit sway (logs you out of your wayland session)
	bindsym $mod+Shift+e exit

#
# Program launching
#
	bindsym $mod+f exec firefox-nightly --new-window
	bindsym $mod+shift+F exec org.kde.falkon

	bindsym $mod+shift+R exec $term tuir
	bindsym $mod+p exec xdg-open-paste
	bindsym $mod+shift+P exec xdg-open-paste -d
	# sanitize whatever's in the clipboard
	bindsym $mod+u exec 'wl-paste | xargs sanitize-url | wl-copy -n'
	bindsym $mod+n exec $term newsboat

#
# Media keys
#

	# Volume
		bindsym XF86AudioRaiseVolume exec amixer -q set Master 2%+ unmute && amixer sget Master | grep 'Right:' | awk -F'[][]' '{ print substr($2, 0, length($2)-1) }' > $SWAYSOCK.wob
		bindsym XF86AudioLowerVolume exec amixer -q set Master 2%- unmute && amixer sget Master | grep 'Right:' | awk -F'[][]' '{ print substr($2, 0, length($2)-1) }' > $SWAYSOCK.wob
		bindsym XF86AudioMute exec (amixer get Master | grep off > /dev/null && amixer -q set Master unmute && amixer sget Master | grep 'Right:' | awk -F'[][]' '{ print substr($2, 0, length($2)-1) }' > $SWAYSOCK.wob) || (amixer -q set Master mute && echo 0 > $SWAYSOCK.wob)

	# Sreen brightness controls
		bindsym XF86MonBrightnessUp exec light -A 2 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob
		bindsym XF86MonBrightnessDown exec light -U 2 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob

	# Touchpad controls
		# bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

	# Media player controls
		bindsym XF86AudioPlay exec media-control play-pause
		bindsym XF86AudioPause exec media-control pause
		bindsym XF86AudioNext exec media-control next
		bindsym XF86AudioPrev exec media-control previous

#
# Moving around:
#
	# Move your focus around
	bindsym $mod+$left focus left
	bindsym $mod+$down focus down
	bindsym $mod+$up focus up
	bindsym $mod+$right focus right
	# or use $mod+[up|down|left|right]
	bindsym $mod+Left focus left
	bindsym $mod+Down focus down
	bindsym $mod+Up focus up
	bindsym $mod+Right focus right

	# _move_ the focused window with the same, but add Shift
	bindsym $mod+Shift+$left move left
	bindsym $mod+Shift+$down move down
	bindsym $mod+Shift+$up move up
	bindsym $mod+Shift+$right move right
	# ditto, with arrow keys
	bindsym $mod+Shift+Left move left
	bindsym $mod+Shift+Down move down
	bindsym $mod+Shift+Up move up
	bindsym $mod+Shift+Right move right
#
# Workspaces:
#
	# switch to workspace
	bindsym $mod+1 workspace 1
	bindsym $mod+2 workspace 2
	bindsym $mod+3 workspace 3
	bindsym $mod+4 workspace 4
	bindsym $mod+5 workspace 5
	bindsym $mod+6 workspace 6
	bindsym $mod+7 workspace 7
	bindsym $mod+8 workspace 8
	bindsym $mod+9 workspace 9
	bindsym $mod+0 workspace 10
	# move focused container to workspace
	bindsym $mod+Shift+1 move container to workspace 1
	bindsym $mod+Shift+2 move container to workspace 2
	bindsym $mod+Shift+3 move container to workspace 3
	bindsym $mod+Shift+4 move container to workspace 4
	bindsym $mod+Shift+5 move container to workspace 5
	bindsym $mod+Shift+6 move container to workspace 6
	bindsym $mod+Shift+7 move container to workspace 7
	bindsym $mod+Shift+8 move container to workspace 8
	bindsym $mod+Shift+9 move container to workspace 9
	bindsym $mod+Shift+0 move container to workspace 10
	# Note: workspaces can have any name you want, not just numbers.
	# We just use 1-10 as the default.
#
# Layout stuff:
#
	# You can "split" the current object of your focus with
	# $mod+b or $mod+v, for horizontal and vertical splits
	# respectively.
	bindsym $mod+b splith
	bindsym $mod+v splitv

	# Switch the current container between different layout styles
	bindsym $mod+s layout stacking
	bindsym $mod+w layout tabbed
	bindsym $mod+e layout toggle split

	# Make the current focus fullscreen
	bindsym F11 fullscreen

	# Toggle the current focus between tiling and floating mode
	bindsym $mod+Shift+space floating toggle

	# Swap focus between the tiling area and the floating area
	bindsym $mod+Return focus mode_toggle

	# move focus to the parent/child container
	bindsym $mod+a focus parent
	bindsym $mod+Shift+a focus child
#
# Scratchpad:
#
	# Sway has a "scratchpad", which is a bag of holding for windows.
	# You can send windows there and get them back later.

	# Move the currently focused window to the scratchpad
	bindsym $mod+Shift+minus move scratchpad

	# Show the next scratchpad window or hide the focused scratchpad window.
	# If there are multiple scratchpad windows, this command cycles through them.
	bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
	# left will shrink the containers width
	# right will grow the containers width
	# up will shrink the containers height
	# down will grow the containers height
	bindsym $left resize shrink width 10 px or 10 ppt
	bindsym $down resize grow height 10 px or 10 ppt
	bindsym $up resize shrink height 10 px or 10 ppt
	bindsym $right resize grow width 10 px or 10 ppt

	# ditto, with arrow keys
	bindsym Left resize shrink width 10 px or 10 ppt
	bindsym Down resize grow height 10 px or 10 ppt
	bindsym Up resize shrink height 10 px or 10 ppt
	bindsym Right resize grow width 10 px or 10 ppt

	# return to default mode
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# This is cut off intentionally; this file is concatenated with
# ./config_lap or ./config_mon
bar {
	position top
	# gaps 0 15
	colors {
		statusline #ffffff
		background #31363b00
		inactive_workspace #32323200 #32323200 #5c5c5c
	}
	status_command i3status-rs ~/.config/sway/status.toml
	icon_theme Papirus-Dark
