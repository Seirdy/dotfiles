#!/usr/bin/env dash
# Runs a full update and saves log files.
# Full update includes:
# - system packages with system package manager
# - cargo packages
# - go packages (installed via go-get)
# - pipx packages (python pkgs in their own venvs with entries in $PATH)
# - global pip3 packages (including pipx)
# - global npm packages
# - global luarocks
# - global rubygems
# - flatpaks
# - chromium (via chromium-latest-linux).
# Everything is run simultaneously in the background. The system update is also
# displayed in the interactive session via `tee` so I can enter my root pw and
# watch it happen.
# Log files can be big, so all but the most recent are compressed.
# TODO: Update neovim plugins
# TODO: determine number of cores and use it to run the max number of parallel
# processes.
# I still have to figure out how to update Firefox Nightly (my $BROWSER)
# without actually launching it.

###########
# Prepare #
###########

script_dir="$HOME/Executables/shell-scripts/updates"
cd "$XDG_DATA_HOME/update-all/logs" || return 1
echo "Compressing old log"

fd -t d -x 7z a -bd -m0=lzma -mx=9 -y "{/}.7z" "{}" \
	| rg -v "Copyright|p7zip Version|Scanning the drive|Items to compress" \
	| rg -v "Files read from disk|Everything is Ok" \
	| sed '/^$/d'

fd -t d -x rm -rf
time_start=$(date '+%s')
mkdir "$time_start"
cd "$time_start" || return 2
log_dir="$PWD"
echo  # newline

#####################
# Logging functions #
#####################

nohup_quiet() {
	nohup dash "$1" 2>&1 | rg -v "nohup: "
}
log_fg() {
	nohup_quiet "$1" | tee "$2"
}
log_bg() {
	nohup_quiet "$1" > "$2" &
}

###############
# Run updates #
###############

echo "Starting update: scripting lang packages"
log_bg "$script_dir/multi-update/update-script-pkg.sh" \
	"$log_dir/script-pkg-$time_start.log"

echo "Starting update: compiled lang packages"
log_bg "$script_dir/multi-update/update-compiled-pkg.sh" \
	"$log_dir/compiled-pkg-$time_start.log"

if [ "$MACHINE" = "Linux" ]; then

	echo "Starting update: flatpak"
	log_bg "$script_dir/update-flatpak.sh" \
		"$log_dir/flatpak-$time_start.log"

	echo "Starting update: chromium-latest-linux"
	log_bg "$HOME/Executables/chromium-latest-linux/update.sh" \
		"$log_dir/chromium-$time_start.log"

	echo "Starting update: dnf packages\n"
	log_fg "$script_dir/root-dnf-update.sh" \
		"$log_dir/dnf-$time_start.log"

elif [ "$MACHINE" = "Darwin" ]; then
	echo "Starting update: homebrew packages\n"
	log_fg "$script_dir/update-homebrew.sh" \
		"$log_dir/brew-$time_start.log"

else
	echo "Unsupported machine for system package updates"
	echo "You machine is $MACHINE"
fi

# vim: filetype=sh

